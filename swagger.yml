openapi: 3.0.3
info:
  title: Instant System Case Study - Real Time Nearby Parking Lots
  description: |-
    The goal of this case study is to develop a "server" exposing a REST API that will be called by mobile applications or websites allowing them to display the list of nearby parking lots with the number of available spots etc.
    This case study is focused on Poitiers with public APIs to fetch data:
    - [parking lots](https://data.grandpoitiers.fr/api/records/1.0/search/?dataset=mobilite-parkings-grand-poitiers-donnees-metiers&rows=1000&facet=nom_du_parking&facet=zone_tarifaire&facet=statut2&facet=statut3)
    - [real time available spots](https://data.grandpoitiers.fr/api/records/1.0/search/?dataset=mobilites-stationnement-des-parkings-en-temps-reel&facet=nom)
  contact:
    email: yannick.chi@gmail.com
  version: 1.0.11
servers:
  - url: https://instant.system.io/api/v3
tags:
  - name: parking
    description: Everything about parkings
paths:
  /parkings:
    get:
      tags:
        - parking
      summary: Retrieve the list of parking lots
      description: Retrieve the list of parking lots, this endpoint can be called at startup or after a cache miss as the data is relatively static
      operationId: getParkings
      parameters:
        - name: city
          in: query
          description: Value of the city to search for parking spots, poitiers is the default value
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParkingLot'
  /parkings/{parkingId}:
    get:
      tags:
        - parking
      summary: Retrieve the details of a parking by id
      description: Retrieve the details of a parking by id, this endpoint can be called upon the click on the mobile app to get more details about the parking lot
      operationId: getParkingById
      parameters:
        - name: parkingId
          in: path
          description: parking id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParkingLot'
        '400':
          description: Invalid parking id
        '404':
          description: Parking id not found
  /spots:
    get:
      tags:
        - parking
      summary: Finds nearby parking lots with available spots
      description: Finds nearby parking lots with available spots
      operationId: findParkingSpots
      parameters:
        - name: city
          in: query
          description: Value of the city to search for parking spots, poitiers is the default value
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParkingSpots'
        '400':
          description: Invalid city value
        '404':
          description: City not found

components:
  schemas:
    ParkingLot:
      type: object
      properties:
        name:
          type: string
          example: THEATRE
        address:
          type: string
          example: 1 Boulevard de Verdun
        numSpots:
          type: integer
          format: int32
          example: 320
        maxHeight:
          type: integer
          format: int32
          example: 190
        costs:
          type: array
          description: parking cost for 1 hour / 2 hours / 3 hours / 4 hours / 24 hours
          items:
            type: number
            format: double
          example: [2,4,6,7.6,17]
    ParkingSpots:
      type: object
      properties:
        name:
          type: string
          example: PALAIS DE JUSTICE
        capacity:
          type: integer
          format: int32
          example: 70
        available:
          type: integer
          format: int32
          example: 36
        longitude:
          type: number
          format: double
          example: 0.3512954265806957
        latitude:
          type: number
          format: double
          example: 46.58595804860371